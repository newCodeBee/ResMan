<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-22T18:27:15 IST" name="Suite" finished-at="2020-08-22T18:28:44 IST" duration-ms="88871">
    <groups>
    </groups>
    <test started-at="2020-08-22T18:27:15 IST" name="Prospect" finished-at="2020-08-22T18:27:49 IST" duration-ms="33595">
      <class name="ResMan.RegressionE2E.CreateProspect">
        <test-method is-config="true" signature="initialogin()[pri:0, instance:ResMan.RegressionE2E.CreateProspect@4648ce9]" started-at="2020-08-22T18:27:15 IST" name="initialogin" finished-at="2020-08-22T18:27:36 IST" duration-ms="20650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialogin -->
        <test-method signature="newprospect()[pri:0, instance:ResMan.RegressionE2E.CreateProspect@4648ce9]" started-at="2020-08-22T18:27:36 IST" name="newprospect" finished-at="2020-08-22T18:27:45 IST" duration-ms="8398" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at ResMan.RegressionE2E.CreateProspect.newprospect(CreateProspect.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newprospect -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ResMan.RegressionE2E.CreateProspect@4648ce9]" started-at="2020-08-22T18:27:45 IST" name="tearDown" finished-at="2020-08-22T18:27:49 IST" duration-ms="4116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ResMan.RegressionE2E.CreateProspect -->
    </test> <!-- Prospect -->
    <test started-at="2020-08-22T18:27:50 IST" name="Transaction" finished-at="2020-08-22T18:28:44 IST" duration-ms="54111">
      <class name="ResMan.RegressionE2E.NewTransactionResident">
        <test-method is-config="true" signature="initialogin()[pri:0, instance:ResMan.RegressionE2E.NewTransactionResident@5cc126dc]" started-at="2020-08-22T18:27:50 IST" name="initialogin" finished-at="2020-08-22T18:28:07 IST" duration-ms="16962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialogin -->
        <test-method signature="residentNewtransaction()[pri:0, instance:ResMan.RegressionE2E.NewTransactionResident@5cc126dc]" started-at="2020-08-22T18:28:07 IST" name="residentNewtransaction" finished-at="2020-08-22T18:28:40 IST" duration-ms="33026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- residentNewtransaction -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:ResMan.RegressionE2E.NewTransactionResident@5cc126dc]" started-at="2020-08-22T18:28:40 IST" name="tearDown" finished-at="2020-08-22T18:28:44 IST" duration-ms="4120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- ResMan.RegressionE2E.NewTransactionResident -->
    </test> <!-- Transaction -->
  </suite> <!-- Suite -->
</testng-results>
